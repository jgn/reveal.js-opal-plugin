(function(){var OpalHandler;OpalHandler=function(){function OpalHandler(){this._setupOpalRun();this._setupOpalIrb()}OpalHandler.prototype._styles="button.opal-button {\n  background: #ECECEC;\n  border-radius: 15px;\n  font-family: arial;\n  font-weight: bold;\n  color: #7f7f7f;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #fff;\n  border: 1px solid #a7a7a7;\n  margin: 0px auto;\n  margin-top: 5px;\n  box-shadow: 0px 2px 1px white inset, 0px -2px 8px white, 0px 2px 5px rgba(0, 0, 0, 0.1), 0px 8px 10px rgba(0, 0, 0, 0.1);\n  -webkit-transition: box-shadow 0.5s;\n}\nbutton.opal-button:hover {\n  box-shadow: 0px 2px 1px white inset, 0px -2px 20px white, 0px 2px 5px rgba(0, 0, 0, 0.1), 0px 8px 10px rgba(0, 0, 0, 0.1);\n}\nbutton.opal-button:active {\n  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.5) inset, 0px -2px 20px white, 0px 1px 5px rgba(0, 0, 0, 0.1), 0px 2px 10px rgba(0, 0, 0, 0.1);\n  background: -webkit-linear-gradient(top, #d1d1d1 0%,#ECECEC 100%);\n}";OpalHandler.prototype._runHTML=' <pre><code class="ruby" style="height: 5em;"></code></pre>\n <div style="width: 90%; margin-left: auto; margin-right: auto; font-size: 0.4em; font-family: arial; font-weight: normal; color: #7f7f7f;">\n   <div style="float: left;">\n     <button class="opal-button opal-clear-workspace">New workspace</button> <span class="opal-workspace-dirty" style="visibility: hidden;">(dirty)</span>\n   </div>\n   <div style="float: right;">\n     <button class="opal-button opal-clear">Clear output</button>\n     <button class="opal-button opal-run">Run</button>\n   </div>\n</div>';OpalHandler.prototype._irbHTML='<button class="opal-button opal-irb">irb</button>';OpalHandler.prototype._irbCSS="text-align: right; width: 90%; margin-left: auto; margin-right: auto;";OpalHandler.prototype._rubyPre='if $opal_environment_exists.nil?\n  class Workspace\n    def self.instance\n      @workspace ||= Object.new\n    end\n\n    def self.clear\n      Object.clear\n      @workspace = Object.new\n    end\n  end\n\n  module Redirect\n    def print(s)\n      (@buffer ||= []) << s.to_s\n    end\n    def puts(s)\n      print s\n      print "\n"\n    end\n\n    def out\n      return "" unless @buffer\n      ret = @buffer.join\n      @buffer.clear\n      ret\n    end\n  end\n\n  $stdout.extend(Redirect)\n\n  class Object\n    def self.top_level_classes\n      @top_level_classes ||= []\n    end\n\n    def self.clear\n      top_level_classes.each do |c|\n        Object.send(:remove_const, c)\n      end\n      top_level_classes.clear\n    end\n\n    def self.inherited(c)\n      top_level_classes << c unless c.to_s.include?(\'::\')\n    end\n  end\n\n  $opal_environment_exists = true\nend\n\nbegin\n  Workspace.instance.instance_eval do\n';OpalHandler.prototype._rubyPost="\n  end\nrescue StandardError => e\n  puts e.message\nend\n\n$stdout.out";OpalHandler.prototype._setDirty=function(bool){var element,_i,_len,_ref,_results;_ref=document.querySelectorAll("span.opal-workspace-dirty");_results=[];for(_i=0,_len=_ref.length;_i<_len;_i++){element=_ref[_i];_results.push(element.style.visibility=bool?"visible":"hidden")}return _results};OpalHandler.prototype._evaluate=function(code){var output;output=Opal.Opal.$eval(this._rubyPre+code+this._rubyPost);this._setDirty(true);return output};OpalHandler.prototype._clearWorkspace=function(){Opal.Opal.$eval(this._rubyPre+"Workspace.clear"+this._rubyPost);return this._setDirty(false)};OpalHandler.prototype._removeComment=function(line){var pound;pound=line.lastIndexOf("  #");if(pound!==-1){line=line.substring(0,pound)}return line.replace(/\s+$/g,"")};OpalHandler.prototype._removeComments=function(code){var line;return function(){var _i,_len,_ref,_results;_ref=code.split("\n");_results=[];for(_i=0,_len=_ref.length;_i<_len;_i++){line=_ref[_i];_results.push(this._removeComment(line))}return _results}.call(this).join("\n")};OpalHandler.prototype._padding=function(n,pad){var s;if(pad==null){pad=" "}s="";while(n-->0){s=s+pad}return s};OpalHandler.prototype._irbifyLine=function(line,lengthLongest){if(lengthLongest==null){lengthLongest=0}return line+this._padding(lengthLongest-line.length)+"  # =>  "+Opal.Opal.$eval("("+line+").inspect")};OpalHandler.prototype._irbify=function(code){var lengthLongest,line,lines;lines=code.split("\n");lengthLongest=Math.max.apply(Math,lines.map(function(line){return line.length}));return function(){var _i,_len,_results;_results=[];for(_i=0,_len=lines.length;_i<_len;_i++){line=lines[_i];_results.push(this._irbifyLine(line,lengthLongest))}return _results}.call(this).join("\n")};OpalHandler.prototype._unFocus=function(){document.activeElement.blur();return document.body.focus()};OpalHandler.prototype._attachOpalRun=function(element){var appendAt,clearButton,clearWorkspaceButton,div,runButton;appendAt=element.parentNode.parentNode;div=document.createElement("div");div.innerHTML=this._runHTML;runButton=div.querySelector("button.opal-run");clearButton=div.querySelector("button.opal-clear");clearWorkspaceButton=div.querySelector("button.opal-clear-workspace");runButton.addEventListener("click",function(_this){return function(e){var button,code,output;button=e.currentTarget;code=button.parentNode.parentNode.parentNode.parentNode.querySelector("code[opal]").textContent;output=button.parentNode.parentNode.parentNode.querySelector("code");output.innerHTML=_this._evaluate(code);return _this._unFocus()}}(this));clearButton.addEventListener("click",function(_this){return function(e){var button,output;button=e.currentTarget;output=button.parentNode.parentNode.parentNode.querySelector("code");output.innerHTML="";return _this._unFocus()}}(this));clearWorkspaceButton.addEventListener("click",function(_this){return function(e){var button;button=e.currentTarget;_this._clearWorkspace();return _this._unFocus()}}(this));return appendAt.appendChild(div)};OpalHandler.prototype._attachOpalIrb=function(element){var appendAt,div,irbButton;appendAt=element.parentNode.parentNode;div=document.createElement("div");div.style.cssText=this._irbCSS;div.innerHTML=this._irbHTML;irbButton=div.querySelector("button.opal-irb");irbButton.addEventListener("click",function(_this){return function(e){var button,code,codeElement,irbed,noComments;button=e.currentTarget;codeElement=button.parentNode.parentNode.querySelector("code.ruby");code=codeElement.textContent;noComments=_this._removeComments(code);irbed=_this._irbify(noComments);button.parentNode.parentNode.querySelector("code.ruby").innerHTML=irbed;return _this._unFocus()}}(this));return appendAt.appendChild(div)};OpalHandler.prototype._injectStyles=function(){var style;style=document.createElement("style");style.appendChild(document.createTextNode(this._styles));return document.head.appendChild(style)};OpalHandler.prototype._setupOpalRun=function(){var element,_i,_len,_ref,_results;_ref=document.querySelectorAll("[opal]");_results=[];for(_i=0,_len=_ref.length;_i<_len;_i++){element=_ref[_i];_results.push(this._attachOpalRun(element))}return _results};OpalHandler.prototype._setupOpalIrb=function(){var element,_i,_len,_ref,_results;_ref=document.querySelectorAll("[opal-irb]");_results=[];for(_i=0,_len=_ref.length;_i<_len;_i++){element=_ref[_i];_results.push(this._attachOpalIrb(element))}return _results};return OpalHandler}();new OpalHandler}).call(this);